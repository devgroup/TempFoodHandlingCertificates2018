@model TempFoodHandlingCertificates2014.Areas.Admin.ViewModels.vmDisplayApplication

@{
    ViewBag.Title = "EditDetails";
}

<h3>Application details</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Html.DisplayFor(model => model.ApplicationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.ApplicationNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Html.DisplayFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Html.DisplayFor(model => model.DisplayEventDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisplayEventDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherEventDates, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Html.DisplayFor(model => model.OtherEventDates, new { htmlAttributes = new { @class = "form-control" } })
               
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessStallName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Html.DisplayFor(model => model.BusinessStallName, new { htmlAttributes = new { @class = "form-control" } })
              
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Html.DisplayFor(model => model.ApplicantName, new { htmlAttributes = new { @class = "form-control" } })
               
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfFood, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Html.DisplayFor(model => model.TypeOfFood, new { htmlAttributes = new { @class = "form-control" } })
               
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AmountDue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AmountDue, new { htmlAttributes = new { @class = "form-control"  } })
                @Html.ValidationMessageFor(model => model.AmountDue, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.ReceiptNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReceiptNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReceiptNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPaymentReceived, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                
                    @Html.CheckBoxFor(model => model.IsPaymentReceived)
             </div>
        </div>

        @*<div class="form-group">
        @Html.LabelFor(model => model.CreatedOrFound, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.CreatedOrFound, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedOrFound, "", new { @class = "text-danger" })
        </div>
    </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" id="Update" name="Update" class="btn btn-primary" />
           
                <input type="submit" id="SaveAndReturn" value="Save and return" name="SaveAndReturn" class="btn btn-primary" />
            </div>
        </div>
    </div>

}

<div>
  


    @Html.ActionLink(linkText: "Return to search form",
    actionName: "Default",
    controllerName: "Enquire",
    routeValues: new { area = "Enquiry" },
    htmlAttributes: null)

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

